---

- name: Prepare for deployment
  hosts: windows
  gather_facts: no
  tasks:
  - community.windows.win_disk_facts:
    register: disk_info

  # - debug:
  #     var: disk_info

  - ansible.builtin.set_fact:
      drive_utilization: >-
        {%- set ns=namespace(usage={}) %}
        {%- for i in disk_info.ansible_facts.ansible_disks %}
        {%- for j in (i.partitions | default([])) %}
        {%- if j.drive_letter | default(false) %}
        {%- set vol = j.volumes[0] %}
        {%- set pct = 100-(100 * vol.size_remaining / vol.size) %}
        {%- set _ = ns.usage.update({j.drive_letter: pct})%}
        {%- endif %}
        {%- endfor %}
        {%- endfor %}
        {{- ns.usage }}

  - debug:
      var: drive_utilization

  - debug:
      msg: "{{ 'Drive %s utilization is %.02f percent.'|format(item,drive_utilization[item]) }}"
    loop: "{{ drive_utilization.keys() | sort }}"


  - ansible.builtin.set_fact:
      disk_report: "{{ lookup('template','disk.txt.j2') }}"

  - ansible.builtin.debug:
      msg: "{{ disk_report }}"

  - ansible.builtin.uri:
      url: "My Log Server"
      body_format: json
      body:
        hostname: "{{ ansible_hostname }}"
        report_text: "{{ disk_report }}"

  # - ansible.builtin.template:
  #     src: "disk.txt.j2"
  #     dest: "disk.txt"
  #   delegate_to: localhost
  # - set_fact:
  #     c_drive: >-
  #       {{
  #         (disk.partitions | 
  #         selectattr('drive_letter', 'equalto','C') |
  #           first
  #         )['volumes'] | first
  #       }}
  # - set_fact:
  #     percent: "{{100 * ( c_drive['size_remaining'] / c_drive['size'] ) }}"

  # - debug:
  #     msg: "{{ percent }}%"

  # - fail:
  #     msg: "Not Enough Disk"
  #   when: "percent|float < 10 "
